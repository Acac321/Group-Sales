const EventEmitter = require('events')
const RWare = new EventEmitter()

const Cookie = ""
const GroupID = ""

const Status = Login(Cookie, GroupID)
console.log(Status)


RWare.on('sales', async (data) => {
    const username = data["agent"]["name"]
    const userid = data["agent"]["id"]
    const productprice = data["currency"]["amount"]
    const productname = data["details"]["name"]
})

RWare.on('error', async (err) => {
    if (err) {} // Do Not Touch Or A Huge Ass Error Will Show
})



















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































// Do Not Touch Monkey

const fetch = (...args) => import('node-fetch').then(({ default: fetch }) => fetch(...args))

// Get Transaction

async function getGroupTransaction() {
    const res = await fetch(`https://economy.roblox.com/v2/groups/${this.Group}/transactions?cursor=&limit=100&sortOrder=Asc&transactionType=Sale`, {
        method: "GET",
        headers: {
            "Cookie": `.ROBLOSECURITY=${this.Cookie}`
        }
    })
    const respond = await res.json()
    
    return respond.data
}

// Login Function

async function Login(Cookie, Group) {
    this.Cookie = Cookie
    this.Group = Group

    return "Started"
}

// Loop

let old = []

const interval = setInterval(async function() {
    try {
        let sales
        const presale = await getGroupTransaction()
        sales = await presale[0]
        
        if (old.length !== 0) {
            if (!old.includes(sales.created)) {
                RWare.emit("sales", sales)
                old.push(sales.created)
            }
        } else if (old.length === 0) {
            old.push(sales.created)
        }
    } catch (err) {
        RWare.emit("error", err)
    }
}, 1000)
